Summary:        quasardb is an advanced, distributed, high-performance key-value store
Name:           $PACKAGE_NAME
Version:        $PACKAGE_VERSION
Release:        1
License:        Proprietary
Group:          Applications/Databases
Vendor:         quasardb SAS
Prefix:         /usr
URL:            https://www.quasardb.net/
BuildArch:      x86_64
Source0:        $(ls ../*-c-api.tar.gz)
Source1:        $(ls ../*-server.tar.gz)
Source2:        $(ls ../*-utils.tar.gz)
Source3:        $(ls ../*-web-bridge.tar.gz)


%description
C/C++ package for all quasardb tools

%prep
%setup -c


%install

# [api install]
mkdir -p              %{buildroot}%{_includedir}/qdb-$PACKAGE_VERSION
mv include/qdb/*      %{buildroot}%{_includedir}/qdb-$PACKAGE_VERSION/

mkdir -p              %{buildroot}%{_libdir}
mv lib/libqdb_api.so  %{buildroot}%{_libdir}/libqdb_api-$PACKAGE_VERSION.so

mkdir -p              %{buildroot}%{_datadir}/$PACKAGE_NAME/$PACKAGE_VERSION
mv examples           %{buildroot}%{_datadir}/$PACKAGE_NAME/$PACKAGE_VERSION/

# [server install]
mkdir -p                              %{buildroot}%{_localstatedir}/lib/qdb

mkdir -p                              %{buildroot}%{_localstatedir}/log/qdb

mkdir -p                              %{buildroot}%{_localstatedir}/share/qdb

mkdir -p                              %{buildroot}%{_sysconfdir}/qdb
touch                                 %{buildroot}%{_sysconfdir}/qdb/qdb_license.txt

mkdir -p                              %{buildroot}%{_initddir}
cp          %{SOURCE1}                %{buildroot}%{_initddir}/qdbd

#kdir -p                              %{buildroot}%{_sysconfdir}/security/limits.d/
#p          %{SOURCE2}                %{buildroot}%{_sysconfdir}/security/limits.d/50-quasardb.conf   <----  doesn't work on a container

mkdir -p                              %{buildroot}%{_sysconfdir}/sysctl.d/
cp          %{SOURCE3}                %{buildroot}%{_sysconfdir}/sysctl.d/30-quasardb.conf

mkdir -p                              %{buildroot}%{_bindir}
cp          bin/*                     %{buildroot}%{_bindir}

# [utils install]
mkdir -p %{buildroot}%{_bindir}
mv bin/* %{buildroot}%{_bindir}/

# [web-bridge install]
# /var/log/qdb_httpd/
mkdir -p                   %{buildroot}%{_localstatedir}/log/qdb_http

# /etc/qdb/
mkdir -p                   %{buildroot}%{_sysconfdir}/qdb

# /usr/share/qdb/www/
mkdir -p                   %{buildroot}%{_datadir}
cp -r       share/qdb      %{buildroot}%{_datadir}

# /etc/init/qdb_http
mkdir -p                   %{buildroot}%{_initddir}
cp          %{SOURCE1}     %{buildroot}%{_initddir}/qdb_httpd

# /usr/bin/qdb_httpd
mkdir -p                   %{buildroot}%{_bindir}
cp          bin/*          %{buildroot}%{_bindir}

# end of install


%files
%defattr(644,root,root,755)

# [api files]
%{_includedir}/qdb-$PACKAGE_VERSION/
%{_datadir}/$PACKAGE_NAME/$PACKAGE_VERSION/examples
%attr(755, root, root) %{_libdir}/libqdb_api-$PACKAGE_VERSION.so

# [server files]
%attr(755, root, root)  %dir     %{_sysconfdir}/qdb
%attr(750, qdb, qdb)    %dir     %{_localstatedir}/lib/qdb
%attr(750, qdb, qdb)    %dir     %{_localstatedir}/log/qdb
%attr(755, qdb, qdb)    %dir     %{_localstatedir}/share/qdb

%attr(755, root, root)           %{_bindir}/*
%attr(755, root, root)           %{_initddir}/qdbd                        %config(noreplace)
%attr(640, qdb, qdb)             %{_sysconfdir}/qdb/qdb_license.txt       %config(noreplace)
%attr(644, root, root)           %{_sysconfdir}/sysctl.d/*                %config(noreplace)
#%attr(644, root, root)           %{_sysconfdir}/security/limits.d/*       %config(noreplace)  <----  doesn't work on a container

# [utils files]
%attr(755,root,root) %{_bindir}/*

# [web bridge files]
%{_datadir}/qdb/www

%attr(755, root, root)            %dir     %{_sysconfdir}/qdb
%attr(750, qdb_http, qdb_http)    %dir     %{_localstatedir}/log/qdb_http

%attr(755, root, root)            %{_bindir}/*
%attr(755, root, root)            %{_initddir}/qdb_httpd                         %config(noreplace)

# end of files

%pre

# [server pre-install]
case "$1" in
    1) # initial install
        /usr/bin/getent group  qdb >/dev/null || /usr/sbin/groupadd -r -f qdb
        /usr/bin/getent passwd qdb >/dev/null || /usr/sbin/useradd -g qdb -r -s /sbin/nologin qdb
    ;;
    2) # upgrade, do nothing
      :
    ;;
esac

# [web bridge pre-install]
case "$4" in
    1) # initial install
        /usr/bin/getent group  qdb_http >/dev/null || /usr/sbin/groupadd -r -f qdb_http
        /usr/bin/getent passwd qdb_http >/dev/null || /usr/sbin/useradd -g qdb_http -r -s /sbin/nologin qdb_http
    ;;
    2) # upgrade, do nothing
      :
    ;;
esac

# end of pre-install


%post

# [api post-install]
ldconfig
ln -s -f %{_libdir}/libqdb_api-$PACKAGE_VERSION.so %{_libdir}/libqdb_api.so 
ln -s -f %{_includedir}/qdb-$PACKAGE_VERSION       %{_includedir}/qdb

# [server post-install]
if [ ! -e %{_localstatedir}/share/qdb/cluster_public.key ]; then
    %{_bindir}/qdb_cluster_keygen -s %{_sysconfdir}/qdb/cluster_private.key -p %{_localstatedir}/share/qdb/cluster_public.key
    chown qdb:qdb %{_sysconfdir}/qdb/cluster_private.key
    chmod 0600 %{_sysconfdir}/qdb/cluster_private.key
    chown qdb:qdb %{_localstatedir}/share/qdb/cluster_public.key
    chmod 0644 %{_localstatedir}/share/qdb/cluster_public.key
fi

if [ ! -e %{_sysconfdir}/qdb/qdbsh_private.key ]; then
    %{_bindir}/qdb_user_add -u qdbsh -p %{_sysconfdir}/qdb/users.conf -s %{_sysconfdir}/qdb/qdbsh_private.key
    chown qdb:qdb %{_sysconfdir}/qdb/users.conf
    chmod 0600 %{_sysconfdir}/qdb/users.conf
    chown qdb:qdb %{_sysconfdir}/qdb/qdbsh_private.key
    chmod 0600 %{_sysconfdir}/qdb/qdbsh_private.key
fi

[ -e %{_sysconfdir}/qdb/qdbd.conf ] || %{_bindir}/qdbd --gen-config --security=true --cluster-private-file=%{_sysconfdir}/qdb/cluster_private.key --user-list=%{_sysconfdir}/qdb/users.conf --daemonize --log-directory=%{_localstatedir}/log/qdb --root=%{_localstatedir}/lib/qdb > %{_sysconfdir}/qdb/qdbd.conf

case "$1" in
    1) # initial install
        chkconfig --add qdbd
        sysctl -e -q -p %{_sysconfdir}/sysctl.d/30-quasardb.conf 2>&1 || true
        service qdbd start
    ;;
    2) # upgrade, just run the service
        service qdbd start
    ;;
esac

# [web bridge post-install]
# add user for qdb_httpd
if [ ! -e %{_sysconfdir}/qdb/qdb_httpd_private.key ]; then
    %{_bindir}/qdb_user_add -u qdb_httpd -p %{_sysconfdir}/qdb/users.conf -s %{_sysconfdir}/qdb/qdb_httpd_private.key
    chown qdb_http:qdb_http %{_sysconfdir}/qdb/qdb_httpd_private.key
    chmod 0600 %{_sysconfdir}/qdb/qdb_httpd_private.key
fi

# need to generate the configuration
# does not overwrite existing files
[ -e %{_sysconfdir}/qdb/qdb_httpd.conf ] || %{_bindir}/qdb_httpd --gen-config --cluster-public-key-file=%{_localstatedir}/share/qdb/cluster_public.key --user-credentials-file=%{_sysconfdir}/qdb/qdb_httpd_private.key --daemonize --log-directory=%{_localstatedir}/log/qdb_http --root=%{_datadir}/qdb/www > %{_sysconfdir}/qdb/qdb_httpd.conf

case "$4" in
    1) # initial install
        chkconfig --add qdb_httpd
        service qdb_httpd start
    ;;
    2) # upgrade, just run the service
        service qdb_httpd start
    ;;
esac

# end of post-install


%preun

# [ server pre-uninstall ]
case "$1" in
    0) # uninstall
        service qdbd stop
        chkconfig --del qdbd
    ;;
    1) # upgrade, just stop the service
        service qdbd stop
    ;;
esac

# [web bridge pre-uninstall]
case "$4" in
    0) # uninstall
        service qdb_httpd stop
        chkconfig --del qdb_httpd
    ;;
    1) # upgrade, just stop the service
        service qdb_httpd stop
    ;;
esac

# end of pre-uninstall

%postun

# [ server post-uninstall ]
case "$1" in
    0) # uninstall
        /usr/sbin/userdel -f qdb
    ;;
    1) # upgrade, do nothing
      :
    ;;
esac

# [ web bridge post-uninstall ]
case "$4" in
    0) # uninstall
        /usr/sbin/userdel -f qdb_http
    ;;
    1) # upgrade, do nothing
      :
    ;;
esac

# end of post-uninstall